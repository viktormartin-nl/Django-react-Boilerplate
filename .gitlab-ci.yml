stages:
  - check
  - build
  - test

NPM Audit [FRONTEND]:
  image: node:12
  stage: check
  allow_failure: true
  script:
    - cd frontend && npm audit

Static Test [FRONTEND]:
  image: node:12
  stage: check
  before_script:
    - cd frontend && npm ci
  script:
    - npm run test:static

Build [FRONTEND]:
  image: node:12
  stage: build
  before_script:
    - cd frontend && npm ci
  script:
    - npm build

Build [DOCKER]:
  image: docker
  stage: build
  only:
    - staging
  script:
    - docker login -u $REGISTRY_USERNAME -e $REGISTRY_EMAIL -p $REGISTRY_PASSWORD $REGISTRY_URL
    - docker build --pull -t $CI_PROJECT_NAME:v$CI_PIPELINE_ID -f Dockerfile .
    - docker push $CI_PROJECT_NAME:v$CI_PIPELINE_ID

Unit Test [FRONTEND]:
  image: node:12
  stage: test
  before_script:
    - cd frontend && npm ci
  script:
    - npm test

Test [BACKEND]:
  stage: test
  script:
    - apt-get update -qy
    - apt-get install -y python3-dev python3-pip libpq-dev
    - pip3 install -r requirements.txt
    - python3 manage.py makemigrations
    - python3 manage.py migrate
    - python3 manage.py test
